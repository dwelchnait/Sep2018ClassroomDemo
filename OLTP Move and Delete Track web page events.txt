MveDown_Click

 	    if (PlayList.Rows.Count == 0)
            {
                MessageUserControl.ShowInfo("Warning", "You must have a playlist showing. Fetch your playlist.");
            }
            else
            {
                if (string.IsNullOrEmpty(PlaylistName.Text))
                {
                    MessageUserControl.ShowInfo("Warning", "You must have a playlist name. Enter your playlist name.");
                    //optionally you might wish to empty the Playlist GridView
                }
                else
                {
                    //check that a single track has been checked
                    //if so, extract the needed data from the select GridViewRow
                    //the TrackId is a hidden column on the GridViewRow
                    int trackid = 0;
                    int tracknumber = 0;
                    int rowselected = 0;
                    CheckBox playlistselection = null;
                    for (int rowindex = 0; rowindex < PlayList.Rows.Count; rowindex++)
                    {
                        //access the control on the selected GridViewRow
                        //pointer to the CheckBox
                        playlistselection = PlayList.Rows[rowindex].FindControl("Selected") as CheckBox;
                        //is the CheckBox on
                        if (playlistselection.Checked)
                        {
                            rowselected++; //counter for number of checked items
                            //save necessary data for moving a track
                            trackid = int.Parse((PlayList.Rows[rowindex].FindControl("TrackID") as Label).Text);
                            tracknumber = int.Parse((PlayList.Rows[rowindex].FindControl("TrackNumber") as Label).Text);
                        }
                    } //eofor

                    //how many tracks were checked
                    if (rowselected != 1)
                    {
                        MessageUserControl.ShowInfo("Warning", "Select one track to move.");
                    }
                    else
                    {
                        //is the selected track the 1st track
                        if (tracknumber == PlayList.Rows.Count)
                        {
                            MessageUserControl.ShowInfo("Warning", "Track cannot be moved down.");
                        }
                        else
                        {
                            //move the track.
                            MoveTrack(trackid, tracknumber, "down");
                        }
                    }
                }
            }

MoveUp-Click

	    if (PlayList.Rows.Count == 0)
            {
                MessageUserControl.ShowInfo("Warning", "You must have a playlist showing. Fetch your playlist.");
            }
            else
            {
                if (string.IsNullOrEmpty(PlaylistName.Text))
                {
                    MessageUserControl.ShowInfo("Warning", "You must have a playlist name. Enter your playlist name.");
                    //optionally you might wish to empty the Playlist GridView
                }
                else
                {
                    //check that a single track has been checked
                    //if so, extract the needed data from the select GridViewRow
                    //the TrackId is a hidden column on the GridViewRow
                    int trackid = 0;
                    int tracknumber = 0;
                    int rowselected = 0;
                    CheckBox playlistselection = null;
                    for (int rowindex = 0; rowindex < PlayList.Rows.Count; rowindex++)
                    {
                        //access the control on the selected GridViewRow
                        //pointer to the CheckBox
                        playlistselection = PlayList.Rows[rowindex].FindControl("Selected") as CheckBox;
                        //is the CheckBox on
                        if (playlistselection.Checked)
                        {
                            rowselected++; //counter for number of checked items
                            //save necessary data for moving a track
                            trackid = int.Parse((PlayList.Rows[rowindex].FindControl("TrackID") as Label).Text);
                            tracknumber = int.Parse((PlayList.Rows[rowindex].FindControl("TrackNumber") as Label).Text);
                        }
                    } //eofor

                    //how many tracks were checked
                    if (rowselected != 1)
                    {
                        MessageUserControl.ShowInfo("Warning", "Select one track to move.");
                    }
                    else
                    {
                        //is the selected track the 1st track
                        if (tracknumber == 1)
                        {
                            MessageUserControl.ShowInfo("Warning", "Track cannot be moved up.");
                        }
                        else
                        {
                            //move the track.
                            MoveTrack(trackid, tracknumber, "up");
                        }
                    }
                }
            }

MoveTrack method

  	protected void MoveTrack(int trackid, int tracknumber, string direction)
        {
            //call BLL to move track
            MessageUserControl.TryRun(() => {
                PlaylistTracksController sysmgr = new PlaylistTracksController();
                sysmgr.MoveTrack("HansenB", PlaylistName.Text, trackid,
                    tracknumber, direction);
                List<UserPlaylistTrack> info = sysmgr.List_TracksForPlaylist(PlaylistName.Text, "HansenB");
                PlayList.DataSource = info;
                PlayList.DataBind();
            },"Moved", "Track has been moved " + direction);
        }

DeleteTrack_Click

	    if (string.IsNullOrEmpty(PlaylistName.Text))
            {
                MessageUserControl.ShowInfo("Enter a play list name");
            }
            else
            {
                if (PlayList.Rows.Count == 0)
                {
                    MessageUserControl.ShowInfo("Playlist has no tracks to delete.");
                }
                else
                {
                    //gather all select rows
                    List<int> trackstodelete = new List<int>();
                    int rowselected = 0;
                    CheckBox playlistselection = null;
                    for(int rowindex = 0; rowindex < PlayList.Rows.Count; rowindex++)
                    {
                        playlistselection = PlayList.Rows[rowindex].FindControl("Selected") as CheckBox;
                        if (playlistselection.Checked)
                        {
                            rowselected++;
                            trackstodelete.Add(int.Parse((PlayList.Rows[rowindex].FindControl("TrackID") as Label).Text));
                        }
                    }
                    //was at least one track selected
                    if (rowselected == 0)
                    {
                        MessageUserControl.ShowInfo("Warning", "You must select at least one track to delete");
                    }
                    else
                    {
                        //send the list of tracks to the BLL to delete
                        MessageUserControl.TryRun(() =>
                        {
                            PlaylistTracksController sysmgr = new PlaylistTracksController();
                            sysmgr.DeleteTracks("HansenB", PlaylistName.Text, trackstodelete);
                            List<UserPlaylistTrack> info = sysmgr.List_TracksForPlaylist(PlaylistName.Text, "HansenB");
                            PlayList.DataSource = info;
                            PlayList.DataBind();
                        },"Removed","Tracks have been removed");
                    }
                }
            }